@model EvergreenAPI.DTO.AccountDTO
@{
    ViewData["Title"] = "Register";
}

<h1>Create</h1>
<h4>Disease</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group py-2">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group py-2">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" type="password" id="password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group py-2">
                <label class="control-label">Confirm password</label>
                <input class="form-control" type="password" id="password-conf" />
                <span id="confirm-error" class="text-danger">@ViewData["error"]</span>
            </div>
            <div class="form-group py-2">
                <input type="submit" value="Register" class="btn btn-primary" id="submitBtn" disabled /> |
            </div>
        </form>
    </div>
</div>

<script>
    let password = document.querySelector("#password");
    let passwordConfirm = document.querySelector("#password-conf");
    let confirmErrorMessage = document.querySelector("#confirm-error");
    let submitBtn = document.querySelector("#submitBtn")

    passwordConfirm.addEventListener("keyup", () => {
        let data = password.value;
        let conf = passwordConfirm.value;
        console.log(`${data} - ${conf}`)

        if (data !== conf) {
            confirmErrorMessage.innerHTML = "Password does not match."
            submitBtn.disabled = true
        } else {
            confirmErrorMessage.innerHTML = ""
            submitBtn.disabled = false
        }
    })
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
