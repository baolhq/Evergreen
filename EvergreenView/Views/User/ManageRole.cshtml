@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContentAccessor
@{
    var session = httpContentAccessor.HttpContext.Session;
}
@model IEnumerable<EvergreenAPI.Models.Account>

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Manage Role";

    List<string> listRoles = new List<string>()
    {
        "User",
        "Professor"
    };
}


<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h4 class="m-0 font-weight-bold text-primary">User Role Managements</h4>
        <div class="d-flex justify-content-between align-items-center">
            <a class="btn btn-success text-white" asp-action="Create">Create Account</a>
            <a class="btn btn-danger text-white ml-2" asp-action="AdminIndex">Back</a>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered text-dark" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.AccountId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Username)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Role)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.AccountId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Username)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td class="role">
                                @if (item.Role == "Admin")
                                {
                                    <select asp-for="@item.Role" class="form-control" disabled>
                                        <option selected>@Html.DisplayFor(modelItem => item.Role)</option>
                                    </select>
                                }
                                else
                                {
                                    <select asp-for="@item.Role" class="form-control account-@item.AccountId" onchange="changeRole(this)">
                                        <option selected>@Html.DisplayFor(modelItem => item.Role)</option>
                                        @for (int i = 0; i < listRoles.Count; i++)
                                        {
                                            if (listRoles[i] == item.Role || listRoles[i] == "Admin") continue;
                                            <option>@listRoles[i]</option>
                                        }
                                    </select>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {


    

    <script>
        const changeRole = (elem) => {
            // Take the second class contains account ID, change the format "account-x" to "x"
            let accountId = elem.classList.item(1).split("-")[1]
            // Take role from select list
            let role = elem.value

            let apiUrl = "https://evergreen-api.onrender.com/api/ManageRole"
            let formData = {
                "accountId": accountId,
                "role": role
            }

            $.ajax({
                contentType: "application/json",
                processData: false,
                type: 'PUT',
                url: apiUrl,
                data: JSON.stringify(formData),
                error: function (xhr, status, error) {
                    console.log(error)
                }
            });

        }
    </script>
}